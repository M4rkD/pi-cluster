* The results and activity windows are a fixed size - for the larger surface screen. Is this a problem?
* Test transformations that are sent to server
* Activity page doesn't refresh when ImageAvailable is not available
  - use an if statement to show a different image until the image is available
* If you kill a job it doesn't handle creating finished status
* What about doing it all with jobsteps, to free up the cluster a bit more
* If you kill a job it doesn't handle creating finished status
* Not all clusters are "there"
* Overlay the name text on the screen and get the user to type it
* Can the user choose avatar?
* Not all clusters are "there" - need to sort/fix IPs
* Drop some submission scripts in place
* Change results window size....!
* Affine transformation not working - fix manually movement
* Do it all with jobsteps...!!! How awesome would that be...!?
  - preprocess
  - FEM
  - postprocess (two images)
  - generate_pdf
* Jobs are not being put in a running state
* TODO Scaling test
 - currently running on 16 processors...would be nice to know how well they're utilised!
 - the simulations are taking a long time (how long...?)
 - Measure them
 - Can I parallelise the images or something?
* Average simulation profile 
Would be nice to have a view of the "typical/average simulation" and our simulation
* Network outage resilience
- UI doesn't keep retrying to submit simulation if network send fails
- User should be notified very obviously of the failed upload
- I should check that we're resilient to these things being off/down/not working
* Generating the images is slow - this is annoying
  - Option 1: do this in parallel (probably 4 times faster)
  - Option 2: do this on the client (or some client)
  - Option 3: Hack together a plotter that can run on the client? (maybe the easiest) - but what about streamlines etc?
* Would be nice if the video feed was part of the web interface, so I can have one (web-based) client that switches between views
* Have a disk space indicator somewhere?
* Client logger should write to some visible console somewhere...
  - Client should retry until success
  - Client should give feedback on success
  - What should the simulation job do once it gets to the part that needs the additional info
  - Hang and wait - but this could be indefinite, maybe we need manual sending
  - Error and allow for re-run - this is probably the best idea really
* Jobs which stop but don't finish will show as running (I think) - e.g. if the meshing fails
* User can enter their name after the fact
* Users choose an avatar from available avatars - makes a bit more sense than a random avatar - do this from the "tablet" interface
* HOME : Client submission notify success
* MAYBE Warn if the meshing error happens...
- something that stops but doesn't finish will show as running
* PHASE2 Client should notice if cpu_usage goes out of sync
* Overlay the name text on the screen and get the user to type it
* Can the user choose avatar?
* Drop some submission scripts in place
* PHASE2 Overlay the name text on the screen and get the user to type it
* PHASE2 Can the user choose avatar?
