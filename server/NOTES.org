* Do it all with jobsteps...!!! How awesome would that be...!?
  - preprocess
  - FEM
  - postprocess (two images)
  - generate_pdf
* ACtivity page doesn't refresh when ImageAvailable is now available
  - use an if statement to show a different image until the image is available
* Jobs are not being put in a running state
* TODO No original photo on the wind image
* DONE Make sure the runner is OK, one option could be:
  - Some scaling could/would be nice to inform job size
  - Install SLURM - https\://medium.com/@glmdev/building-a-raspberry-pi-cluster-784f0df9afbd
  - Queue goes away, I just submit to jobs from the cluster
  - The plotting jobs could then run on the nodes
  - I could (maybe?) use gnu parallel to generate the images in parallel?
  - I would need to change "running" to read the IPs of the running jobs from SLURM
  - Would need some way of detecting errors and success
  - Read "running" directly from SLURM
  - Anything that isn't "running" or "finished" is an error
  - Show errors in the client and link them to simulation output <====== ****
  Solves:
   - everything is running on the wrong nodes..
   - can the queue system run multiple sims in parallel...!?
   - using the same dir MPI error....??
* TODO PDF test printer (and write a process)
 - Server should maintain a "to be printed" state
 - printer should notify server if there are jobs which should be marked as printed
 - a process runs on a machine and prints the jobs
* TODO Scaling test
 - the simulations are taking a long time (how long...?)
 - Measure them
 - Can I parallelise the images or something?
* TODO Reduce activity refresh stuff
* the job output is not flushing?
* Does UI keep retrying to submit simulation if network send fails...? Is there an easy retry manually?
* Are we resilient to things being off/down/not working
* PHASE2 Generating the images is too slow
  - Option 1: do this in parallel (probably 4 times faster)
  - Option 2: do this on the client (or some client)
  - Option 3: Hack together a plotter that can run on the client? (maybe the easiest)
* delete my private keys from the cluster!!
* what about disk space?? do I have enough?? Should I check before the festival?
* ED Are the avatars suitable...??
* HOME: Client logger should write to some visible console somewhere...
  - Client should retry until success
  - Client should give feedback on success
  - What should the simulation job do once it gets to the part that needs the additional info
  - Hang and wait - but this could be indefinite, maybe we need manual sending
  - Error and allow for re-run - this is probably the best idea really
* HOME : Better Client Simulation Submission
- Client should submit in another thread (NO CLUSTER)
 - The client currently hangs as submission takes place
- Option: Client generates a png file and sends to server
  - instead of a np array, the client generates and post a png file for depth.png and rgb_with_contour.png
  - hopefully the server doesn't actually need the data
  - never combine these on the server, let the web clients handle this
  - Then (maybe) nobody has to handle a simulation that's waiting but doesn't have rgb_contour etc yet
- Client handle simulation which is "waiting" but doesn't have rgb_contour.png or depth.png yet
 - Server currently returns the right info in this case (i.e. images-available)
 - We just need a spinning icon whilst these are uploaded
 - Another option could be that the client generates a png file and just sends that to the server....would that be quicker?
* MAYBE No ways to detect errors if slurm run fails
- something that stops but doesn't finish will show as running
* PHASE2 Client should notice if cpu_usage goes out of sync
